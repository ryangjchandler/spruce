{"version":3,"file":"spruce.js","sources":["../node_modules/compare-versions/index.js","../src/utils.js","../src/observable.js","../src/index.js"],"sourcesContent":["/* global define */\n(function (root, factory) {\n  /* istanbul ignore next */\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.compareVersions = factory();\n  }\n}(this, function () {\n\n  var semver = /^v?(?:\\d+)(\\.(?:[x*]|\\d+)(\\.(?:[x*]|\\d+)(\\.(?:[x*]|\\d+))?(?:-[\\da-z\\-]+(?:\\.[\\da-z\\-]+)*)?(?:\\+[\\da-z\\-]+(?:\\.[\\da-z\\-]+)*)?)?)?$/i;\n\n  function indexOrEnd(str, q) {\n    return str.indexOf(q) === -1 ? str.length : str.indexOf(q);\n  }\n\n  function split(v) {\n    var c = v.replace(/^v/, '').replace(/\\+.*$/, '');\n    var patchIndex = indexOrEnd(c, '-');\n    var arr = c.substring(0, patchIndex).split('.');\n    arr.push(c.substring(patchIndex + 1));\n    return arr;\n  }\n\n  function tryParse(v) {\n    return isNaN(Number(v)) ? v : Number(v);\n  }\n\n  function validate(version) {\n    if (typeof version !== 'string') {\n      throw new TypeError('Invalid argument expected string');\n    }\n    if (!semver.test(version)) {\n      throw new Error('Invalid argument not valid semver (\\''+version+'\\' received)');\n    }\n  }\n\n  function compareVersions(v1, v2) {\n    [v1, v2].forEach(validate);\n\n    var s1 = split(v1);\n    var s2 = split(v2);\n\n    for (var i = 0; i < Math.max(s1.length - 1, s2.length - 1); i++) {\n      var n1 = parseInt(s1[i] || 0, 10);\n      var n2 = parseInt(s2[i] || 0, 10);\n\n      if (n1 > n2) return 1;\n      if (n2 > n1) return -1;\n    }\n\n    var sp1 = s1[s1.length - 1];\n    var sp2 = s2[s2.length - 1];\n\n    if (sp1 && sp2) {\n      var p1 = sp1.split('.').map(tryParse);\n      var p2 = sp2.split('.').map(tryParse);\n\n      for (i = 0; i < Math.max(p1.length, p2.length); i++) {\n        if (p1[i] === undefined || typeof p2[i] === 'string' && typeof p1[i] === 'number') return -1;\n        if (p2[i] === undefined || typeof p1[i] === 'string' && typeof p2[i] === 'number') return 1;\n\n        if (p1[i] > p2[i]) return 1;\n        if (p2[i] > p1[i]) return -1;\n      }\n    } else if (sp1 || sp2) {\n      return sp1 ? -1 : 1;\n    }\n\n    return 0;\n  };\n\n  var allowedOperators = [\n    '>',\n    '>=',\n    '=',\n    '<',\n    '<='\n  ];\n\n  var operatorResMap = {\n    '>': [1],\n    '>=': [0, 1],\n    '=': [0],\n    '<=': [-1, 0],\n    '<': [-1]\n  };\n\n  function validateOperator(op) {\n    if (typeof op !== 'string') {\n      throw new TypeError('Invalid operator type, expected string but got ' + typeof op);\n    }\n    if (allowedOperators.indexOf(op) === -1) {\n      throw new TypeError('Invalid operator, expected one of ' + allowedOperators.join('|'));\n    }\n  }\n\n  compareVersions.validate = function(version) {\n    return typeof version === 'string' && semver.test(version);\n  }\n\n  compareVersions.compare = function (v1, v2, operator) {\n    // Validate operator\n    validateOperator(operator);\n\n    // since result of compareVersions can only be -1 or 0 or 1\n    // a simple map can be used to replace switch\n    var res = compareVersions(v1, v2);\n    return operatorResMap[operator].indexOf(res) > -1;\n  }\n\n  return compareVersions;\n}));\n","import compareVersions from 'compare-versions'\n\nexport const isNullOrUndefined = value => {\n    return value === null || value === undefined\n}\n\nexport const isObject = _ => {\n    return Object.getPrototypeOf(_) === Object.prototype\n}\n\nexport const isArray = _ => Array.isArray(_)\n\nexport const getMethods = obj => {\n    let methods = {}\n\n    Object.entries(obj).filter(([_, value]) => typeof value === 'function').forEach(([key, value]) => methods[key] = value)\n\n    return methods\n}\n\nexport const isTesting = () => {\n    return navigator.userAgent, navigator.userAgent.includes(\"Node.js\")\n        || navigator.userAgent.includes(\"jsdom\")\n}\n\nexport const checkForAlpine = () => {\n    if (isTesting()) {\n        return true\n    }\n\n    if (! window.Alpine) {\n        return false\n    }\n\n    return compareVersions.compare(window.Alpine.version, '2.7.0', '>=')\n}","import { isNullOrUndefined, isObject, isArray } from './utils'\n\nexport const createObservable = (target, callbacks) => {\n    Object.entries(target).forEach(([key, value]) => {\n        if (! isNullOrUndefined(value) && (isObject(value) || isArray(value))) {            \n            target[key] = createObservable(value, callbacks)\n        }\n    })\n\n    return new Proxy(target, {\n        get(target, key, receiver) {\n            return callbacks.get(target, key, receiver)\n        },\n        set(target, key, value, receiver) {\n            if (! isNullOrUndefined(value) && (isObject(value) || isArray(value))) {\n                value = createObservable(value, callbacks)\n            }\n\n            let originalValue = target[key]\n\n            target[key] = value\n\n            // Copy watchers from the original value if they exist\n            if (!isNullOrUndefined(originalValue) && !isNullOrUndefined(originalValue.__watchers)) {\n                target[key].__watchers = originalValue.__watchers\n            }\n\n            callbacks.set(target, key, target[key], receiver)\n\n            return true\n        }\n    })\n}","import { getMethods, checkForAlpine, isObject, isArray, isNullOrUndefined } from './utils'\nimport { createObservable } from './observable'\n\nconst Spruce = {\n    stores: {},\n\n    persistenceDriver: window.localStorage,\n\n    persisted: [],\n\n    subscribers: [],\n\n    pendingWatchers: {},\n\n    disableReactivity: false,\n\n    startingCallbacks: [],\n\n    startedCallbacks: [],\n\n    hasStarted: false,\n\n    start() {\n        this.startingCallbacks.forEach(fn => fn())\n\n        this.attach()\n\n        this.stores = createObservable(this.stores, {\n            get: (target, key, receiver) => {\n                if (Object.is(receiver, this.stores) && ['get', 'set', 'toggle', 'call', 'clear'].includes(key)) {\n                    return this[key].bind(this)\n                }\n\n                return Reflect.get(target, key, receiver)\n            },\n            set: (target, key, value, receiver) => {\n                if (this.disableReactivity) {\n                    return\n                }\n\n                this.updateSubscribers()\n\n                this.runWatchers(target, key, value, receiver)\n\n                this.disableReactivity = true\n\n                try {\n                    this.persisted.forEach(this.updateLocalStorage.bind(this))\n                } catch (e) {\n                    // Do nothing here (thanks Safari!)\n                }\n\n                this.disableReactivity = false\n            }\n        })\n\n        this.hasStarted = true\n\n        this.disableReactivity = true\n\n        Object.entries(this.pendingWatchers).forEach(([name, callbacks]) => {\n            callbacks.forEach(callback => this.watch(name, callback))\n        })\n\n        this.disableReactivity = false\n\n        this.startedCallbacks.forEach(fn => fn())\n    },\n\n    starting(callback) {\n        this.startingCallbacks.push(callback)\n    },\n\n    started(callback) {\n        this.startedCallbacks.push(callback)\n    },\n\n    attach() {\n        if (! checkForAlpine()) {\n            throw new Error('[Spruce] You must be using Alpine >= 2.5.0 to use Spruce.')\n        }\n\n        const self = this\n\n        window.Alpine.addMagicProperty('store', el => {\n            self.subscribe(el)\n\n            return self.stores\n        })\n    },\n\n    store(name, state, persist = false) {\n        if (typeof state === 'function') {\n            state = state()\n        }\n        \n        if (persist) {\n            try {\n                this.stores[name] = this.retrieveFromLocalStorage(name, getMethods(state))\n\n                if (!this.persisted.includes(name)) {\n                    this.persisted.push(name)\n                }\n            } catch (e) {\n                // Do nothing here (thanks Safari!)\n            }\n        }\n\n        if (!this.stores[name]) {\n            this.stores[name] = state\n        }\n\n        return this.stores[name]\n    },\n\n    reset(name, state) {\n        if (this.stores[name] === undefined) {\n            return;\n        }\n        \n        this.stores[name] = state\n    },\n\n    subscribe(el) {\n        if (!this.subscribers.includes(el)) {\n            this.subscribers.push(el)\n        }\n\n        return this.stores\n    },\n\n    updateSubscribers() {\n        this.subscribers.filter(el => !!el.__x).forEach(el => {\n            el.__x.updateElements(el)\n        })\n    },\n\n    retrieveFromLocalStorage(name, methods = {}) {\n        const value = this.persistenceDriver.getItem(`__spruce:${name}`)\n\n        if (! value) {\n            return null\n        }\n\n        let storage = JSON.parse(value)\n\n        if (typeof storage === 'object') {\n            storage = Object.assign(methods, storage)\n\n            delete storage.__watchers\n            delete storage.__key_name\n        }\n\n        return storage\n    },\n\n    updateLocalStorage(name) {\n        const store = { ...this.store(name) }\n\n        delete store.__watchers\n        delete store.__key_name\n\n        this.persistenceDriver.setItem(`__spruce:${name}`, JSON.stringify(this.store(name)))\n    },\n\n    get(name, target = this.stores) {\n        return name.split('.').reduce((target, part) => target[part], target)\n    },\n\n    set(name, value, target = this.stores) {\n        if (! isArray(name)) {\n            name = name.split('.')\n        }\n\n        if (name.length === 1) return target[name[0]] = value\n\n        if (target[name[0]]) {\n            return this.set(name.slice(1), value, target[name[0]])\n        } else {\n            target[name[0]] = {}\n\n            return this.set(name.slice(1), value, target[name[0]])\n        }\n    },\n\n    toggle(name) {\n        return this.set(name, ! this.get(name))\n    },\n\n    call(name, ...args) {\n        return this.get(name)(...args)\n    },\n\n    clear(name) {\n        return this.persistenceDriver.removeItem(`__spruce:${name}`)\n    },\n\n    watch(name, callback) {\n        if (! this.hasStarted) {\n            this.pendingWatchers[name] || (this.pendingWatchers[name] = [])\n\n            this.pendingWatchers[name].push(callback)\n\n            return [() => this.unwatch(name, callback)]\n        }\n\n        const nameParts = name.split('.')\n\n        const target = nameParts.reduce((target, part) => {\n            const sub = target[part]\n\n            if (! isNullOrUndefined(sub) && (isObject(sub) || isArray(sub))) {\n                return sub\n            }\n\n            return target\n        }, this.stores)\n\n        /**\n         * If the target object / array is the property\n         * that needs to be watched, a magic `__self` key is\n         * used so that runner can pick up on it later.\n         */\n        const part = Object.is(target, this.get(name)) ? '__self' : nameParts[nameParts.length - 1]\n\n        if (! target.__watchers) {\n            target.__watchers = new Map\n        }\n        \n        if (! target.__watchers.has(part)) {\n            target.__watchers.set(part, new Set)\n        }\n\n        target.__watchers.get(part).add(callback)\n\n        return [() => this.unwatch(name, callback)]\n    },\n\n    unwatch(name, callback) {\n        const nameParts = name.split('.')\n\n        const target = nameParts.reduce((target, part) => {\n            const sub = target[part]\n\n            if (! isNullOrUndefined(sub) && (isObject(sub) || isArray(sub))) {\n                return sub\n            }\n\n            return target\n        }, this.stores)\n\n        const part = Object.is(target, this.get(name)) ? '__self' : nameParts[nameParts.length - 1]\n        const watchers = target.__watchers\n\n        if (! watchers.has(part)) {\n            return\n        }\n\n        watchers.get(part).delete(callback)\n    },\n\n    watchers(name) {\n        const nameParts = name.split('.')\n\n        const target = nameParts.reduce((target, part) => {\n            const sub = target[part]\n\n            if (! isNullOrUndefined(sub) && (isObject(sub) || isArray(sub))) {\n                return sub\n            }\n\n            return target\n        }, this.stores)\n\n        const part = Object.is(target, this.get(name)) ? '__self' : nameParts[nameParts.length - 1]\n\n        if (! target.__watchers) {\n            return {}\n        }\n\n        return target.__watchers.get(part)\n    },\n\n    runWatchers(target, key, value) {\n        if (! target.__watchers) {\n            return\n        }\n\n        if (target.__watchers.has(key)) {\n            target.__watchers.get(key).forEach(f => f(value))\n        }\n\n        /**\n         * The `__self` key is used for watchers that are registered\n         * to the object or array being updated.\n         */\n        if (target.__watchers.has('__self')) {\n            target.__watchers.get('__self').forEach(f => f(value, key))\n        }\n    },\n\n    persistUsing(driver) {\n        if (this.persisted.length > 0) {\n            console.warn('[Spruce] You have already initialised a persisted store. Changing the driver may cause issues.')\n        }\n\n        if (typeof driver.getItem !== 'function') {\n            throw new Error('[Spruce] The persistence driver must have a `getItem(key)` method.')\n        }\n\n        if (typeof driver.setItem !== 'function') {\n            throw new Error('[Spruce] The persistence driver must have a `setItem(key, value)` method.')\n        }\n\n        if (typeof driver.removeItem !== 'function') {\n            throw new Error('[Spruce] The persistence driver must have a `removeItem(name)` method.')\n        }\n\n        this.persistenceDriver = driver\n    }\n}\n\nwindow.Spruce = Spruce\n\nconst deferrer = window.deferLoadingAlpine || function (callback) { callback() }\n\nwindow.deferLoadingAlpine = function (callback) {\n    window.Spruce.start()\n\n    deferrer(callback)\n}\n\nexport default Spruce\n"],"names":["module","semver","split","v","str","c","replace","patchIndex","indexOf","length","arr","substring","push","tryParse","isNaN","Number","validate","version","TypeError","test","Error","compareVersions","v1","v2","forEach","s1","s2","i","Math","max","n1","parseInt","n2","sp1","sp2","p1","map","p2","undefined","allowedOperators","operatorResMap",">",">=","=","<=","<","compare","operator","op","join","validateOperator","res","factory","isNullOrUndefined","value","isObject","_","Object","getPrototypeOf","prototype","isArray","Array","createObservable","target","callbacks","entries","key","Proxy","get","receiver","set","originalValue","__watchers","Spruce","stores","persistenceDriver","window","localStorage","persisted","subscribers","pendingWatchers","disableReactivity","startingCallbacks","startedCallbacks","hasStarted","start","fn","attach","this","is","includes","bind","Reflect","updateSubscribers","runWatchers","updateLocalStorage","e","callback","watch","name","starting","started","navigator","userAgent","Alpine","self","addMagicProperty","el","subscribe","store","state","persist","retrieveFromLocalStorage","methods","filter","reset","__x","updateElements","getItem","storage","JSON","parse","assign","__key_name","setItem","stringify","reduce","part","slice","toggle","call","args","clear","removeItem","unwatch","nameParts","sub","Map","has","Set","add","watchers","delete","f","persistUsing","driver","console","warn","const","deferrer","deferLoadingAlpine"],"mappings":"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"}