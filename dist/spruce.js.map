{"version":3,"file":"spruce.js","sources":["../node_modules/compare-versions/index.js","../src/utils.js","../src/observable.js","../src/index.js","../src/drivers/localStorage.js"],"sourcesContent":["/* global define */\n(function (root, factory) {\n  /* istanbul ignore next */\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.compareVersions = factory();\n  }\n}(this, function () {\n\n  var semver = /^v?(?:\\d+)(\\.(?:[x*]|\\d+)(\\.(?:[x*]|\\d+)(\\.(?:[x*]|\\d+))?(?:-[\\da-z\\-]+(?:\\.[\\da-z\\-]+)*)?(?:\\+[\\da-z\\-]+(?:\\.[\\da-z\\-]+)*)?)?)?$/i;\n\n  function indexOrEnd(str, q) {\n    return str.indexOf(q) === -1 ? str.length : str.indexOf(q);\n  }\n\n  function split(v) {\n    var c = v.replace(/^v/, '').replace(/\\+.*$/, '');\n    var patchIndex = indexOrEnd(c, '-');\n    var arr = c.substring(0, patchIndex).split('.');\n    arr.push(c.substring(patchIndex + 1));\n    return arr;\n  }\n\n  function tryParse(v) {\n    return isNaN(Number(v)) ? v : Number(v);\n  }\n\n  function validate(version) {\n    if (typeof version !== 'string') {\n      throw new TypeError('Invalid argument expected string');\n    }\n    if (!semver.test(version)) {\n      throw new Error('Invalid argument not valid semver (\\''+version+'\\' received)');\n    }\n  }\n\n  function compareVersions(v1, v2) {\n    [v1, v2].forEach(validate);\n\n    var s1 = split(v1);\n    var s2 = split(v2);\n\n    for (var i = 0; i < Math.max(s1.length - 1, s2.length - 1); i++) {\n      var n1 = parseInt(s1[i] || 0, 10);\n      var n2 = parseInt(s2[i] || 0, 10);\n\n      if (n1 > n2) return 1;\n      if (n2 > n1) return -1;\n    }\n\n    var sp1 = s1[s1.length - 1];\n    var sp2 = s2[s2.length - 1];\n\n    if (sp1 && sp2) {\n      var p1 = sp1.split('.').map(tryParse);\n      var p2 = sp2.split('.').map(tryParse);\n\n      for (i = 0; i < Math.max(p1.length, p2.length); i++) {\n        if (p1[i] === undefined || typeof p2[i] === 'string' && typeof p1[i] === 'number') return -1;\n        if (p2[i] === undefined || typeof p1[i] === 'string' && typeof p2[i] === 'number') return 1;\n\n        if (p1[i] > p2[i]) return 1;\n        if (p2[i] > p1[i]) return -1;\n      }\n    } else if (sp1 || sp2) {\n      return sp1 ? -1 : 1;\n    }\n\n    return 0;\n  };\n\n  var allowedOperators = [\n    '>',\n    '>=',\n    '=',\n    '<',\n    '<='\n  ];\n\n  var operatorResMap = {\n    '>': [1],\n    '>=': [0, 1],\n    '=': [0],\n    '<=': [-1, 0],\n    '<': [-1]\n  };\n\n  function validateOperator(op) {\n    if (typeof op !== 'string') {\n      throw new TypeError('Invalid operator type, expected string but got ' + typeof op);\n    }\n    if (allowedOperators.indexOf(op) === -1) {\n      throw new TypeError('Invalid operator, expected one of ' + allowedOperators.join('|'));\n    }\n  }\n\n  compareVersions.validate = function(version) {\n    return typeof version === 'string' && semver.test(version);\n  }\n\n  compareVersions.compare = function (v1, v2, operator) {\n    // Validate operator\n    validateOperator(operator);\n\n    // since result of compareVersions can only be -1 or 0 or 1\n    // a simple map can be used to replace switch\n    var res = compareVersions(v1, v2);\n    return operatorResMap[operator].indexOf(res) > -1;\n  }\n\n  return compareVersions;\n}));\n","import compareVersions from 'compare-versions'\n\nexport const domReady = () => {\n    return new Promise(resolve => {\n        if (document.readyState == \"loading\") {\n            document.addEventListener(\"DOMContentLoaded\", resolve)\n        } else {\n            resolve()\n        }\n    })\n}\n\nexport const isNullOrUndefined = value => {\n    return value === null || value === undefined\n}\n\nexport const isObject = _ => {\n    return Object.getPrototypeOf(_) === Object.prototype\n}\n\nexport const isArray = _ => Array.isArray(_)\n\nexport const getMethods = obj => {\n    let methods = {}\n\n    Object.entries(obj).filter(([key, value]) => typeof value === 'function').forEach(([key, value]) => methods[key] = value)\n\n    return methods\n}\n\nexport const isTesting = () => {\n    return navigator.userAgent, navigator.userAgent.includes(\"Node.js\")\n        || navigator.userAgent.includes(\"jsdom\")\n}\n\nexport const checkForAlpine = () => {\n    if (isTesting()) {\n        return true\n    }\n\n    if (! window.Alpine) {\n        return false\n    }\n\n    return compareVersions.compare(window.Alpine.version, '2.7.0', '>=')\n}","import { isNullOrUndefined, isObject, isArray } from './utils'\n\nexport const createObservable = (target, callbacks) => {\n    Object.entries(target).forEach(([key, value]) => {\n        if (! isNullOrUndefined(value) && (isObject(value) || isArray(value))) {\n            target[key] = createObservable(value, callbacks)\n        }\n    })\n\n    return new Proxy(target, {\n        set(target, key, value) {\n            if (! isNullOrUndefined(value) && isObject(value)) {\n                value = createObservable(value, callbacks)\n            }\n\n            callbacks.set(target, key, target[key] = value)\n\n            return true\n        }\n    })\n}","import { domReady, getMethods, checkForAlpine } from './utils'\nimport { createObservable } from './observable'\nimport { localStorage } from './drivers'\n\nconst Spruce = {\n    stores: {},\n\n    persisted: [],\n\n    driver: localStorage,\n\n    subscribers: [],\n\n    watchers: {},\n\n    disableReactivity: false,\n\n    async start() {\n        await domReady()\n\n        this.attach()\n\n        this.stores = createObservable(this.stores, {\n            set: (target, key, value) => {\n                if (this.disableReactivity) {\n                    return\n                }\n\n                this.updateSubscribers()\n\n                this.runWatchers(this.stores, target, key, value)\n\n                this.disableReactivity = true\n\n                try {\n                    this.persisted.forEach(name => this.driver.set(name, this.store(name)))\n                } catch (e) {\n                    // Do nothing here (thanks Safari!)\n                }\n\n                this.disableReactivity = false\n            }\n        })\n    },\n\n    attach() {\n        if (! checkForAlpine()) {\n            throw new Error('[Spruce] You must be using Alpine >= 2.5.0 to use Spruce.')\n        }\n\n        const self = this\n\n        window.Alpine.addMagicProperty('store', el => {\n            self.subscribe(el)\n\n            return self.stores\n        })\n    },\n\n    store(name, state, persist = false) {\n        if (persist) {\n            try {\n                this.stores[name] = this.driver.get(name, getMethods(state))\n\n                if (!this.persisted.includes(name)) {\n                    this.persisted.push(name)\n                }\n            } catch (e) {\n                // Do nothing here (thanks Safari!)\n            }\n        }\n\n        if (!this.stores[name]) {\n            this.stores[name] = state\n        }\n\n        return this.stores[name]\n    },\n\n    reset(name, state) {\n        this.stores[name] = state\n    },\n\n    subscribe(el) {\n        if (!this.subscribers.includes(el)) {\n            this.subscribers.push(el)\n        }\n\n        return this.stores\n    },\n\n    updateSubscribers() {\n        this.subscribers.filter(el => !!el.__x).forEach(el => {\n            el.__x.updateElements(el)\n        })\n    },\n\n    watch(name, callback) {\n        if (!this.watchers[name]) {\n            this.watchers[name] = []\n        }\n\n        this.watchers[name].push(callback)\n    },\n\n    runWatchers(stores, target, key, value) {\n        const self = this\n\n        if (self.watchers[key]) {\n            return self.watchers[key].forEach(callback => callback(value))\n        }\n\n        Object.keys(self.watchers)\n            .filter(watcher => watcher.includes('.'))\n            .forEach(fullDotNotationKey => {\n                let dotNotationParts = fullDotNotationKey.split('.')\n\n                if (key !== dotNotationParts[dotNotationParts.length - 1]) return\n\n                dotNotationParts.reduce((comparison, part) => {\n                    if (comparison[key] === target[key] || Object.is(target, comparison)) {\n                        self.watchers[fullDotNotationKey].forEach(callback => callback(value))\n                    }\n\n                    return comparison[part]\n                }, stores)\n            })\n    }\n}\n\nconst deferrer = window.deferLoadingAlpine || function (callback) { callback() }\n\nwindow.deferLoadingAlpine = function (callback) {\n    window.Spruce = Spruce\n    window.Spruce.start()\n\n    deferrer(callback)\n}\n\nexport default Spruce\n","export default {\n    get(name, methods = {}) {\n        const storage = JSON.parse(window.localStorage.getItem(`__spruce:${name}`))\n\n        return storage ? Object.assign(methods, storage) : null\n    },\n    set(name, value) {\n        window.localStorage.setItem(`__spruce:${name}`, JSON.stringify(value))\n    }\n}"],"names":["module","semver","split","v","str","c","replace","patchIndex","indexOf","length","arr","substring","push","tryParse","isNaN","Number","validate","version","TypeError","test","Error","compareVersions","v1","v2","forEach","s1","s2","i","Math","max","n1","parseInt","n2","sp1","sp2","p1","map","p2","undefined","allowedOperators","operatorResMap",">",">=","=","<=","<","compare","operator","op","join","validateOperator","res","factory","isNullOrUndefined","value","isObject","_","Object","getPrototypeOf","prototype","createObservable","target","callbacks","entries","Array","isArray","key","Proxy","set","Spruce","stores","persisted","driver","get","name","methods","storage","JSON","parse","window","localStorage","getItem","assign","setItem","stringify","subscribers","watchers","disableReactivity","start","this","Promise","resolve","document","readyState","addEventListener","attach","_this","updateSubscribers","runWatchers","store","e","navigator","userAgent","includes","Alpine","self","addMagicProperty","el","subscribe","state","persist","filter","reset","__x","updateElements","watch","callback","keys","watcher","fullDotNotationKey","dotNotationParts","reduce","comparison","part","is","deferrer","deferLoadingAlpine"],"mappings":"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"}